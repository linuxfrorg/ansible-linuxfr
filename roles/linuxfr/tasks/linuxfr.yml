- name: Clone the LinuxFR repository
  git: repo={{ linuxfr_repository['url'] }} version={{ linuxfr_repository['branch'] }} dest={{ linuxfr_home }}/src/linuxfr.org

- name: Configure the Rails apps's database
  copy: src=linuxfr/database.yml dest={{ linuxfr_home }}/src/linuxfr.org/config/database.yml

- name: Configure the Rails apps's secrets
  copy: src=linuxfr/secret.yml dest={{ linuxfr_home }}/src/linuxfr.org/config/secret.yml

- name: Install the Rails app using Bundler
  command: bundle install chdir={{ linuxfr_home }}/src/linuxfr.org
  environment: ruby_env

- name: Install the ElasticSearch init script
  copy: src=init.d/elasticsearch dest=/etc/init.d/elasticsearch mode=0755

# Stinky workaround for https://github.com/AF83/desi/issues/25
- name: Setup ElasticSearch
  command: desi install {{ elasticsearch_version }} creates=/root/elasticsearch/elasticsearch-{{ elasticsearch_version }}
  environment: ruby_env
  notify:
    - restart elasticsearch

- name: Ensure ElasticSearch is enabled and started
  service: name=elasticsearch state=started enabled=yes

- name: Check if the database already exists
  command: rake db:version chdir={{ linuxfr_home }}/src/linuxfr.org
  ignore_errors: True
  environment: ruby_env
  register: db_version

- name: Setup the database
  command: rake db:setup chdir={{ linuxfr_home }}/src/linuxfr.org
  environment: ruby_env
  when: db_version|failed

- name: Migrate the database
  command: rake db:migrate chdir={{ linuxfr_home }}/src/linuxfr.org
  environment: ruby_env
  when: db_version|success

- name: Flush the Redis database
  command: redis-cli flushdb

- name: Initialize indexes
  command: rake elasticsearch:import chdir={{ linuxfr_home }}/src/linuxfr.org
  environment: ruby_env

- name: Install the LinuxFr.org init script
  copy: src=init.d/linuxfr dest=/etc/init.d/linuxfr mode=0755

- name: Put the LinuxFR configuration into /etc/default/linuxfr
  template: src=default/linuxfr.j2 dest=/etc/default/linuxfr
  notify:
    - restart linuxfr

- name: Ensure the LinuxFR server is enabled and started
  service: name=linuxfr state=started enabled=yes
